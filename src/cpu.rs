use super::display::Framebuffer;
use super::keypad::Keypad;



pub struct Cpu {
    ram: [u8; 4069],
    v: [u8; 16],
    i: u16,
    pc: u16,

    stack: Vec<u16>,
}



impl Cpu {
    pub fn new() -> Self {
        let ram = [0; 4069];

        ram[..80].copy_from_slice( &[
            0xF0, 0x90, 0x90, 0x90, 0xF0,
            0x20, 0x60, 0x20, 0x20, 0x70,
            0xF0, 0x10, 0xF0, 0x80, 0xF0,
            0xF0, 0x10, 0xF0, 0x10, 0xF0,
            0x90, 0x90, 0xF0, 0x10, 0x10,
            0xF0, 0x80, 0xF0, 0x10, 0xF0,
            0xF0, 0x80, 0xF0, 0x90, 0xF0,
            0xF0, 0x10, 0x20, 0x40, 0x40,
            0xF0, 0x90, 0xF0, 0x90, 0xF0,
            0xF0, 0x90, 0xF0, 0x10, 0xF0,
            0xF0, 0x90, 0xF0, 0x90, 0x90,
            0xE0, 0x90, 0xE0, 0x90, 0xE0,
            0xF0, 0x80, 0x80, 0x80, 0xF0,
            0xE0, 0x90, 0x90, 0x90, 0xE0,
            0xF0, 0x80, 0xF0, 0x80, 0xF0,
            0xF0, 0x80, 0xF0, 0x80, 0x80,
        ]);

        let v = [0; 16];
        let i = 0;
        let pc = 0x200;

        Cpu {
            ram,
            v,
            i,
            pc,
            stack: Vec::new(),
        }
    }

    pub fn execute_cycle(framebuffer: &mut Framebuffer, keypad: &mut Keypad) {
                
    }
    



}
